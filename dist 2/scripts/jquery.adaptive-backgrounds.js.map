{"version":3,"sources":["../bower_components/jquery.adaptive-backgrounds/src/jquery.adaptive-backgrounds.js"],"names":["$","DATA_COLOR","DATA_PARENT","DATA_CSS_BG","EVENT_CF","DEFAULTS","selector","parent","exclude","normalizeTextColor","normalizedTextColors","light","dark","lumaClasses","n","t","document","createElement","getContext","e","a","Image","o","src","substring","crossOrigin","onload","drawImage","getImageData","width","height","data","join","map","name","r","i","c","colors","u","paletteSize","length","m","s","d","f","dominant","count","palette","Array","apply","Boolean","l","indexOf","g","some","success","p","secondary","RGBaster","window","adaptiveBackground","run","options","opts","extend","each","index","el","$this","this","handleColors","img","useCSSBackground","getCSSBackground","attr","trigger","color","str","css","regex","match","exec","replace","on","ev","$parent","parents","backgroundColor","getYIQ","rgb","getNormalizedTextColor","getLumaClass","addClass","jQuery"],"mappings":"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","file":"jquery.adaptive-backgrounds.js","sourcesContent":["\n/* jshint debug: true, expr: true */\n\n;(function($){\n\n  /* Constants & defaults. */\n  var DATA_COLOR    = 'data-ab-color';\n  var DATA_PARENT   = 'data-ab-parent';\n  var DATA_CSS_BG   = 'data-ab-css-background';\n  var EVENT_CF      = 'ab-color-found';\n\n  var DEFAULTS      = {\n    selector:             '[data-adaptive-background]',\n    parent:               null,\n    exclude:              [ 'rgb(0,0,0)', 'rgba(255,255,255)' ],\n    normalizeTextColor:   false,\n    normalizedTextColors:  {\n      light:      \"#fff\",\n      dark:       \"#000\"\n    },\n    lumaClasses:  {\n      light:      \"ab-light\",\n      dark:       \"ab-dark\"\n    }\n  };\n\n  // Include RGBaster - https://github.com/briangonzalez/rgbaster.js\n  /* jshint ignore:start */\n  !function(n){\"use strict\";var t=function(){return document.createElement(\"canvas\").getContext(\"2d\")},e=function(n,e){var a=new Image,o=n.src||n;\"data:\"!==o.substring(0,5)&&(a.crossOrigin=\"Anonymous\"),a.onload=function(){var n=t(\"2d\");n.drawImage(a,0,0);var o=n.getImageData(0,0,a.width,a.height);e&&e(o.data)},a.src=o},a=function(n){return[\"rgb(\",n,\")\"].join(\"\")},o=function(n){return n.map(function(n){return a(n.name)})},r=5,i=10,c={};c.colors=function(n,t){t=t||{};var c=t.exclude||[],u=t.paletteSize||i;e(n,function(e){for(var i=n.width*n.height||e.length,m={},s=\"\",d=[],f={dominant:{name:\"\",count:0},palette:Array.apply(null,new Array(u)).map(Boolean).map(function(){return{name:\"0,0,0\",count:0}})},l=0;i>l;){if(d[0]=e[l],d[1]=e[l+1],d[2]=e[l+2],s=d.join(\",\"),m[s]=s in m?m[s]+1:1,-1===c.indexOf(a(s))){var g=m[s];g>f.dominant.count?(f.dominant.name=s,f.dominant.count=g):f.palette.some(function(n){return g>n.count?(n.name=s,n.count=g,!0):void 0})}l+=4*r}if(t.success){var p=o(f.palette);t.success({dominant:a(f.dominant.name),secondary:p[0],palette:p})}})},n.RGBaster=n.RGBaster||c}(window);\n  /* jshint ignore:end */\n\n\n  /*\n    Our main function declaration.\n  */\n  $.adaptiveBackground = {\n    run: function( options ){\n      var opts = $.extend({}, DEFAULTS, options);\n\n      /* Loop over each element, waiting for it to load\n         then finding its color, and triggering the\n         color found event when color has been found.\n      */\n      $( opts.selector ).each(function(index, el){\n        var $this = $(this);\n\n        /*  Small helper functions which applies\n            colors, attrs, triggers events, etc.\n        */\n        var handleColors = function () {\n          var img = useCSSBackground() ? getCSSBackground() : $this[0];\n\n          RGBaster.colors(img, {\n            paletteSize: 20,\n            exclude: opts.exclude,\n            success: function(colors) {\n              $this.attr(DATA_COLOR, colors.dominant);\n              $this.trigger(EVENT_CF, { color: colors.dominant, palette: colors.palette });\n            }\n          });\n\n        };\n\n        var useCSSBackground = function(){\n          var attr = $this.attr( DATA_CSS_BG );\n          return (typeof attr !== typeof undefined && attr !== false);\n        };\n\n        var getCSSBackground = function(){\n          var str = $this.css('background-image');\n          var regex = /\\(([^)]+)\\)/;\n          var match = regex.exec(str)[1].replace(/\"/g, '')\n          return match;\n        };\n\n        /* Subscribe to our color-found event. */\n        $this.on( EVENT_CF, function(ev, data){\n\n          // Try to find the parent.\n          var $parent;\n          if ( opts.parent && $this.parents( opts.parent ).length ) {\n            $parent = $this.parents( opts.parent );\n          }\n          else if ( $this.attr( DATA_PARENT ) && $this.parents( $this.attr( DATA_PARENT ) ).length ){\n            $parent = $this.parents( $this.attr( DATA_PARENT ) );\n          }\n          else if ( useCSSBackground() ){\n            $parent = $this;\n          }\n          else if (opts.parent) {\n            $parent = $this.parents( opts.parent );\n          }\n          else {\n            $parent = $this.parent();\n          }\n\n          $parent.css({ backgroundColor: data.color });\n\n          // Helper function to calculate yiq - http://en.wikipedia.org/wiki/YIQ\n          var getYIQ = function(color){\n            var rgb = data.color.match(/\\d+/g);\n            return ((rgb[0]*299)+(rgb[1]*587)+(rgb[2]*114))/1000;\n          };\n\n          var getNormalizedTextColor = function (color){\n            return getYIQ(color) >= 128 ? opts.normalizedTextColors.dark : opts.normalizedTextColors.light;\n          };\n\n          var getLumaClass = function (color){\n            return getYIQ(color) <= 128 ? opts.lumaClasses.dark : opts.lumaClasses.light;\n          };\n\n          // Normalize the text color based on luminance.\n          if ( opts.normalizeTextColor )\n            $parent.css({ color: getNormalizedTextColor(data.color) });\n\n          // Add a class based on luminance.\n          $parent.addClass( getLumaClass(data.color) )\n                 .attr('data-ab-yaq', getYIQ(data.color));\n\n          opts.success && opts.success($this, data);\n        });\n\n        /* Handle the colors. */\n        handleColors();\n\n      });\n    },\n  };\n\n})(jQuery);\n"],"sourceRoot":"assets/scripts/"}